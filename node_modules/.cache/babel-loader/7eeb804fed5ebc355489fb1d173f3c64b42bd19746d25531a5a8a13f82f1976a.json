{"ast":null,"code":"var _jsxFileName = \"E:\\\\DOCUMENT SHARING\\\\827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d\\\\reactapp\\\\src\\\\components\\\\auth\\\\ProtectedRoute.jsx\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  const token = localStorage.getItem(\"token\");\n  const userStr = localStorage.getItem(\"user\");\n\n  // ✅ If no token or user -> redirect to login\n  if (!token || !userStr) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  let userRole;\n  try {\n    userRole = JSON.parse(userStr).role;\n  } catch {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ✅ If role mismatch -> send to correct dashboard\n  if (requiredRole && userRole !== requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: userRole === \"ADMIN\" ? \"/admin-dashboard\" : \"/user-dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ✅ Otherwise render the page\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","token","localStorage","getItem","userStr","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","userRole","JSON","parse","role","_c","$RefreshReg$"],"sources":["E:/DOCUMENT SHARING/827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d/reactapp/src/components/auth/ProtectedRoute.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ children, requiredRole }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const userStr = localStorage.getItem(\"user\");\r\n\r\n  // ✅ If no token or user -> redirect to login\r\n  if (!token || !userStr) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  let userRole;\r\n  try {\r\n    userRole = JSON.parse(userStr).role;\r\n  } catch {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // ✅ If role mismatch -> send to correct dashboard\r\n  if (requiredRole && userRole !== requiredRole) {\r\n    return (\r\n      <Navigate\r\n        to={userRole === \"ADMIN\" ? \"/admin-dashboard\" : \"/user-dashboard\"}\r\n        replace\r\n      />\r\n    );\r\n  }\r\n\r\n  // ✅ Otherwise render the page\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACrD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;EAE5C;EACA,IAAI,CAACF,KAAK,IAAI,CAACG,OAAO,EAAE;IACtB,oBAAOP,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,IAAIC,QAAQ;EACZ,IAAI;IACFA,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACT,OAAO,CAAC,CAACU,IAAI;EACrC,CAAC,CAAC,MAAM;IACN,oBAAOjB,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIV,YAAY,IAAIW,QAAQ,KAAKX,YAAY,EAAE;IAC7C,oBACEH,OAAA,CAACF,QAAQ;MACPU,EAAE,EAAEM,QAAQ,KAAK,OAAO,GAAG,kBAAkB,GAAG,iBAAkB;MAClEL,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEN;;EAEA;EACA,OAAOX,QAAQ;AACjB,CAAC;AAACgB,EAAA,GA5BIjB,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}