{"ast":null,"code":"// API serviceconst \n// API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n  getAuthHeaders() {\n    const token = localStorage.getItem('token');\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n  }\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...this.getAuthHeaders(),\n        ...options.headers\n      },\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem('token');\n          window.location.hash = '';\n          throw new Error('Unauthorized');\n        }\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        return await response.json();\n      }\n      return response;\n    } catch (error) {\n      console.error(`API Error (${endpoint}):`, error);\n      throw error;\n    }\n  }\n\n  // GET request\n  async get(endpoint, params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `${endpoint}?${queryString}` : endpoint;\n    return this.request(url, {\n      method: 'GET'\n    });\n  }\n\n  // POST request\n  async post(endpoint, data = null) {\n    return this.request(endpoint, {\n      method: 'POST',\n      body: data ? JSON.stringify(data) : null\n    });\n  }\n\n  // PUT request\n  async put(endpoint, data = null) {\n    return this.request(endpoint, {\n      method: 'PUT',\n      body: data ? JSON.stringify(data) : null\n    });\n  }\n\n  // DELETE request\n  async delete(endpoint) {\n    return this.request(endpoint, {\n      method: 'DELETE'\n    });\n  }\n\n  // File upload\n  async uploadFile(endpoint, formData) {\n    const headers = this.getAuthHeaders();\n    delete headers['Content-Type']; // Let browser set it for multipart\n\n    return this.request(endpoint, {\n      method: 'POST',\n      headers,\n      body: formData\n    });\n  }\n\n  // Download file\n  async downloadFile(endpoint) {\n    const response = await this.request(endpoint, {\n      method: 'GET'\n    });\n    return response; // Returns the Response object for blob handling\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["ApiService","constructor","baseURL","API_BASE_URL","getAuthHeaders","token","localStorage","getItem","Authorization","request","endpoint","options","url","config","headers","response","fetch","ok","status","removeItem","window","location","hash","Error","errorData","json","catch","message","contentType","get","includes","error","console","params","queryString","URLSearchParams","toString","method","post","data","body","JSON","stringify","put","delete","uploadFile","formData","downloadFile"],"sources":["E:/DOCUMENT SHARING/827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d/reactapp/src/services/api.js"],"sourcesContent":["// API serviceconst \r\n// API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.baseURL = API_BASE_URL;\r\n  }\r\n\r\n  getAuthHeaders() {\r\n    const token = localStorage.getItem('token');\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  }\r\n\r\n  async request(endpoint, options = {}) {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...this.getAuthHeaders(),\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      \r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          localStorage.removeItem('token');\r\n          window.location.hash = '';\r\n          throw new Error('Unauthorized');\r\n        }\r\n        \r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const contentType = response.headers.get('content-type');\r\n      if (contentType && contentType.includes('application/json')) {\r\n        return await response.json();\r\n      }\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error(`API Error (${endpoint}):`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // GET request\r\n  async get(endpoint, params = {}) {\r\n    const queryString = new URLSearchParams(params).toString();\r\n    const url = queryString ? `${endpoint}?${queryString}` : endpoint;\r\n    return this.request(url, { method: 'GET' });\r\n  }\r\n\r\n  // POST request\r\n  async post(endpoint, data = null) {\r\n    return this.request(endpoint, {\r\n      method: 'POST',\r\n      body: data ? JSON.stringify(data) : null,\r\n    });\r\n  }\r\n\r\n  // PUT request\r\n  async put(endpoint, data = null) {\r\n    return this.request(endpoint, {\r\n      method: 'PUT',\r\n      body: data ? JSON.stringify(data) : null,\r\n    });\r\n  }\r\n\r\n  // DELETE request\r\n  async delete(endpoint) {\r\n    return this.request(endpoint, { method: 'DELETE' });\r\n  }\r\n\r\n  // File upload\r\n  async uploadFile(endpoint, formData) {\r\n    const headers = this.getAuthHeaders();\r\n    delete headers['Content-Type']; // Let browser set it for multipart\r\n\r\n    return this.request(endpoint, {\r\n      method: 'POST',\r\n      headers,\r\n      body: formData,\r\n    });\r\n  }\r\n\r\n  // Download file\r\n  async downloadFile(endpoint) {\r\n    const response = await this.request(endpoint, { method: 'GET' });\r\n    return response; // Returns the Response object for blob handling\r\n  }\r\n}\r\n\r\nexport default new ApiService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}