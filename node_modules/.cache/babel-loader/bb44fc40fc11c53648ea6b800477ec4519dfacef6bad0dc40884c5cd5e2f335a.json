{"ast":null,"code":"import api from './api';\nexport const folderService = {\n  getAllFolders: async () => {\n    const response = await api.get('/folders');\n    return response.data;\n  },\n  getRootFolders: async () => {\n    const response = await api.get('/folders/root');\n    return response.data;\n  },\n  getFolderById: async id => {\n    const response = await api.get(`/folders/${id}`);\n    return response.data;\n  },\n  createFolder: async folderData => {\n    const response = await api.post('/folders', folderData);\n    return response.data;\n  },\n  updateFolder: async (id, folderData) => {\n    const response = await api.put(`/folders/${id}`, folderData);\n    return response.data;\n  },\n  deleteFolder: async id => {\n    await api.delete(`/folders/${id}`);\n  },\n  getSubFolders: async parentId => {\n    const response = await api.get(`/folders/${parentId}/subfolders`);\n    return response.data;\n  },\n  shareFolder: async (folderId, shareWithEmail) => {\n    // This would be implemented when you add sharing functionality to your backend\n    const response = await api.post(`/folders/${folderId}/share`, {\n      shareWith: shareWithEmail\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","folderService","getAllFolders","response","get","data","getRootFolders","getFolderById","id","createFolder","folderData","post","updateFolder","put","deleteFolder","delete","getSubFolders","parentId","shareFolder","folderId","shareWithEmail","shareWith"],"sources":["E:/DOCUMENT SHARING/827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d/reactapp/src/services/folderService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const folderService = {\r\n  getAllFolders: async () => {\r\n    const response = await api.get('/folders');\r\n    return response.data;\r\n  },\r\n\r\n  getRootFolders: async () => {\r\n    const response = await api.get('/folders/root');\r\n    return response.data;\r\n  },\r\n\r\n  getFolderById: async (id) => {\r\n    const response = await api.get(`/folders/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createFolder: async (folderData) => {\r\n    const response = await api.post('/folders', folderData);\r\n    return response.data;\r\n  },\r\n\r\n  updateFolder: async (id, folderData) => {\r\n    const response = await api.put(`/folders/${id}`, folderData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteFolder: async (id) => {\r\n    await api.delete(`/folders/${id}`);\r\n  },\r\n\r\n  getSubFolders: async (parentId) => {\r\n    const response = await api.get(`/folders/${parentId}/subfolders`);\r\n    return response.data;\r\n  },\r\n\r\n  shareFolder: async (folderId, shareWithEmail) => {\r\n    // This would be implemented when you add sharing functionality to your backend\r\n    const response = await api.post(`/folders/${folderId}/share`, {\r\n      shareWith: shareWithEmail\r\n    });\r\n    return response.data;\r\n  }\r\n  \r\n\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,aAAa,GAAG;EAC3BC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,MAAMH,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDE,aAAa,EAAE,MAAOC,EAAE,IAAK;IAC3B,MAAML,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,YAAYI,EAAE,EAAE,CAAC;IAChD,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDI,YAAY,EAAE,MAAOC,UAAU,IAAK;IAClC,MAAMP,QAAQ,GAAG,MAAMH,GAAG,CAACW,IAAI,CAAC,UAAU,EAAED,UAAU,CAAC;IACvD,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDO,YAAY,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,UAAU,KAAK;IACtC,MAAMP,QAAQ,GAAG,MAAMH,GAAG,CAACa,GAAG,CAAC,YAAYL,EAAE,EAAE,EAAEE,UAAU,CAAC;IAC5D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDS,YAAY,EAAE,MAAON,EAAE,IAAK;IAC1B,MAAMR,GAAG,CAACe,MAAM,CAAC,YAAYP,EAAE,EAAE,CAAC;EACpC,CAAC;EAEDQ,aAAa,EAAE,MAAOC,QAAQ,IAAK;IACjC,MAAMd,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,YAAYa,QAAQ,aAAa,CAAC;IACjE,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDa,WAAW,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,cAAc,KAAK;IAC/C;IACA,MAAMjB,QAAQ,GAAG,MAAMH,GAAG,CAACW,IAAI,CAAC,YAAYQ,QAAQ,QAAQ,EAAE;MAC5DE,SAAS,EAAED;IACb,CAAC,CAAC;IACF,OAAOjB,QAAQ,CAACE,IAAI;EACtB;AAGF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}