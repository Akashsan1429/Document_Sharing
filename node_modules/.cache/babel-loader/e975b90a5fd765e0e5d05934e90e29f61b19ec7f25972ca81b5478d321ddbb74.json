{"ast":null,"code":"var _jsxFileName = \"E:\\\\DOCUMENT SHARING\\\\827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d\\\\reactapp\\\\src\\\\components\\\\auth\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../../services/authService';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    const username = localStorage.getItem('username');\n    if (token && userId) {\n      setIsAuthenticated(true);\n      setCurrentUser({\n        id: userId,\n        username\n      });\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n\n      // ✅ Save to localStorage\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('userId', response.userId);\n      localStorage.setItem('username', credentials.username);\n      setIsAuthenticated(true);\n      setCurrentUser({\n        id: response.userId,\n        username: credentials.username\n      });\n      toast.success('Login successful!');\n      return response;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      toast.success('Registration successful! Please login.');\n      return response;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('username');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    toast.success('Logged out successfully');\n  };\n  const value = {\n    isAuthenticated,\n    currentUser,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"JiCjNPhbX/z/+1rb8Y3uBqaeHqs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","loading","setLoading","token","localStorage","getItem","userId","username","id","login","credentials","response","setItem","success","error","_error$response","_error$response$data","errorMessage","data","message","register","userData","_error$response2","_error$response2$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/DOCUMENT SHARING/827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d/reactapp/src/components/auth/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authService } from '../../services/authService';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const userId = localStorage.getItem('userId');\r\n    const username = localStorage.getItem('username');\r\n\r\n    if (token && userId) {\r\n      setIsAuthenticated(true);\r\n      setCurrentUser({ id: userId, username });\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await authService.login(credentials);\r\n\r\n      // ✅ Save to localStorage\r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('userId', response.userId);\r\n      localStorage.setItem('username', credentials.username);\r\n\r\n      setIsAuthenticated(true);\r\n      setCurrentUser({ id: response.userId, username: credentials.username });\r\n\r\n      toast.success('Login successful!');\r\n      return response;\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Login failed';\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await authService.register(userData);\r\n      toast.success('Registration successful! Please login.');\r\n      return response;\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Registration failed';\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('username');\r\n\r\n    setIsAuthenticated(false);\r\n    setCurrentUser(null);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    currentUser,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,4BAA4B;AACxD,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGV,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAME,QAAQ,GAAGH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEjD,IAAIF,KAAK,IAAIG,MAAM,EAAE;MACnBR,kBAAkB,CAAC,IAAI,CAAC;MACxBE,cAAc,CAAC;QAAEQ,EAAE,EAAEF,MAAM;QAAEC;MAAS,CAAC,CAAC;IAC1C;IACAL,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM1B,WAAW,CAACwB,KAAK,CAACC,WAAW,CAAC;;MAErD;MACAN,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACR,KAAK,CAAC;MAC7CC,YAAY,CAACQ,OAAO,CAAC,QAAQ,EAAED,QAAQ,CAACL,MAAM,CAAC;MAC/CF,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAEF,WAAW,CAACH,QAAQ,CAAC;MAEtDT,kBAAkB,CAAC,IAAI,CAAC;MACxBE,cAAc,CAAC;QAAEQ,EAAE,EAAEG,QAAQ,CAACL,MAAM;QAAEC,QAAQ,EAAEG,WAAW,CAACH;MAAS,CAAC,CAAC;MAEvErB,KAAK,CAAC2B,OAAO,CAAC,mBAAmB,CAAC;MAClC,OAAOF,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAMC,YAAY,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,cAAc;MACpEjC,KAAK,CAAC4B,KAAK,CAACG,YAAY,CAAC;MACzB,MAAMH,KAAK;IACb;EACF,CAAC;EAED,MAAMM,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAM1B,WAAW,CAACmC,QAAQ,CAACC,QAAQ,CAAC;MACrDnC,KAAK,CAAC2B,OAAO,CAAC,wCAAwC,CAAC;MACvD,OAAOF,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAQ,gBAAA,EAAAC,qBAAA;MACd,MAAMN,YAAY,GAAG,EAAAK,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBJ,IAAI,cAAAK,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAI,qBAAqB;MAC3EjC,KAAK,CAAC4B,KAAK,CAACG,YAAY,CAAC;MACzB,MAAMH,KAAK;IACb;EACF,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnBvC,WAAW,CAACuC,MAAM,CAAC,CAAC;IACpBpB,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC;IAChCrB,YAAY,CAACqB,UAAU,CAAC,QAAQ,CAAC;IACjCrB,YAAY,CAACqB,UAAU,CAAC,UAAU,CAAC;IAEnC3B,kBAAkB,CAAC,KAAK,CAAC;IACzBE,cAAc,CAAC,IAAI,CAAC;IACpBd,KAAK,CAAC2B,OAAO,CAAC,yBAAyB,CAAC;EAC1C,CAAC;EAED,MAAMa,KAAK,GAAG;IACZ7B,eAAe;IACfE,WAAW;IACXU,KAAK;IACLW,QAAQ;IACRI,MAAM;IACNvB;EACF,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAACsC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA/B,QAAA,EAChCA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnC,GAAA,CA3EWF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}