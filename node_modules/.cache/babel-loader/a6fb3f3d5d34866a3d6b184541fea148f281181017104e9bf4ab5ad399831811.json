{"ast":null,"code":"var _jsxFileName = \"E:\\\\DOCUMENT SHARING\\\\827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d\\\\reactapp\\\\src\\\\components\\\\auth\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  const isAuthenticated = () => {\n    const token = localStorage.getItem('token');\n    return !!token;\n  };\n  const getUserRole = () => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      try {\n        const userData = JSON.parse(user);\n        return userData.role;\n      } catch (error) {\n        return null;\n      }\n    }\n    return null;\n  };\n  if (!isAuthenticated()) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  const userRole = getUserRole();\n  if (requiredRole && userRole !== requiredRole) {\n    // Redirect to appropriate dashboard if wrong role\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: userRole === 'ADMIN' ? '/admin-dashboard' : '/user-dashboard',\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","isAuthenticated","token","localStorage","getItem","getUserRole","user","userData","JSON","parse","role","error","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","userRole","_c","$RefreshReg$"],"sources":["E:/DOCUMENT SHARING/827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d/reactapp/src/components/auth/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children, requiredRole }) => {\r\n  const isAuthenticated = () => {\r\n    const token = localStorage.getItem('token');\r\n    return !!token;\r\n  };\r\n\r\n  const getUserRole = () => {\r\n    const user = localStorage.getItem('user');\r\n    if (user) {\r\n      try {\r\n        const userData = JSON.parse(user);\r\n        return userData.role;\r\n      } catch (error) {\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (!isAuthenticated()) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  const userRole = getUserRole();\r\n  if (requiredRole && userRole !== requiredRole) {\r\n    // Redirect to appropriate dashboard if wrong role\r\n    return <Navigate to={userRole === 'ADMIN' ? '/admin-dashboard' : '/user-dashboard'} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACrD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO,CAAC,CAACF,KAAK;EAChB,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,IAAI,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIE,IAAI,EAAE;MACR,IAAI;QACF,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;QACjC,OAAOC,QAAQ,CAACG,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,OAAO,IAAI;MACb;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAED,IAAI,CAACV,eAAe,CAAC,CAAC,EAAE;IACtB,oBAAOJ,OAAA,CAACF,QAAQ;MAACiB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,IAAIL,YAAY,IAAIkB,QAAQ,KAAKlB,YAAY,EAAE;IAC7C;IACA,oBAAOH,OAAA,CAACF,QAAQ;MAACiB,EAAE,EAAEM,QAAQ,KAAK,OAAO,GAAG,kBAAkB,GAAG,iBAAkB;MAACL,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChG;EAEA,OAAOlB,QAAQ;AACjB,CAAC;AAACoB,EAAA,GA9BIrB,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}