{"ast":null,"code":"// Document serviceimport api from './api';\n\nclass DocumentService {\n  async getAllDocuments() {\n    return api.get('/documents');\n  }\n  async getMyDocuments() {\n    return api.get('/documents/my');\n  }\n  async getDocument(id) {\n    return api.get(`/documents/${id}`);\n  }\n  async createDocument(documentData) {\n    return api.post('/documents', documentData);\n  }\n  async updateDocument(id, documentData) {\n    return api.put(`/documents/${id}`, documentData);\n  }\n  async deleteDocument(id) {\n    return api.delete(`/documents/${id}`);\n  }\n  async uploadDocument(file, metadata = {}) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Add metadata if provided\n    Object.keys(metadata).forEach(key => {\n      formData.append(key, metadata[key]);\n    });\n    return api.uploadFile('/documents/upload', formData);\n  }\n  async downloadDocument(id) {\n    try {\n      const response = await api.downloadFile(`/documents/download/${id}`);\n      return response;\n    } catch (error) {\n      throw new Error(`Failed to download document: ${error.message}`);\n    }\n  }\n  async searchDocuments(query) {\n    return api.get('/documents/search', {\n      q: query\n    });\n  }\n  async getDocumentsByFolder(folderId) {\n    return api.get('/documents', {\n      folderId\n    });\n  }\n\n  // Utility methods for file handling\n  formatFileSize(bytes) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n  getFileIcon(fileType) {\n    const iconMap = {\n      'application/pdf': 'üìÑ',\n      'application/msword': 'üìù',\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'üìù',\n      'application/vnd.ms-excel': 'üìä',\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'üìä',\n      'image/jpeg': 'üñºÔ∏è',\n      'image/jpg': 'üñºÔ∏è',\n      'image/png': 'üñºÔ∏è',\n      'image/gif': 'üñºÔ∏è',\n      'text/plain': 'üìÑ',\n      'application/zip': 'üóÇÔ∏è',\n      'application/rar': 'üóÇÔ∏è'\n    };\n    return iconMap[fileType] || 'üìÑ';\n  }\n  isImageFile(fileType) {\n    return fileType === null || fileType === void 0 ? void 0 : fileType.startsWith('image/');\n  }\n  isPdfFile(fileType) {\n    return fileType === 'application/pdf';\n  }\n}\nexport default new DocumentService();","map":{"version":3,"names":["DocumentService","getAllDocuments","api","get","getMyDocuments","getDocument","id","createDocument","documentData","post","updateDocument","put","deleteDocument","delete","uploadDocument","file","metadata","formData","FormData","append","Object","keys","forEach","key","uploadFile","downloadDocument","response","downloadFile","error","Error","message","searchDocuments","query","q","getDocumentsByFolder","folderId","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","getFileIcon","fileType","iconMap","isImageFile","startsWith","isPdfFile"],"sources":["E:/DOCUMENT SHARING/827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d/reactapp/src/services/documentService.js"],"sourcesContent":["// Document serviceimport api from './api';\r\n\r\nclass DocumentService {\r\n  async getAllDocuments() {\r\n    return api.get('/documents');\r\n  }\r\n\r\n  async getMyDocuments() {\r\n    return api.get('/documents/my');\r\n  }\r\n\r\n  async getDocument(id) {\r\n    return api.get(`/documents/${id}`);\r\n  }\r\n\r\n  async createDocument(documentData) {\r\n    return api.post('/documents', documentData);\r\n  }\r\n\r\n  async updateDocument(id, documentData) {\r\n    return api.put(`/documents/${id}`, documentData);\r\n  }\r\n\r\n  async deleteDocument(id) {\r\n    return api.delete(`/documents/${id}`);\r\n  }\r\n\r\n  async uploadDocument(file, metadata = {}) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    // Add metadata if provided\r\n    Object.keys(metadata).forEach(key => {\r\n      formData.append(key, metadata[key]);\r\n    });\r\n\r\n    return api.uploadFile('/documents/upload', formData);\r\n  }\r\n\r\n  async downloadDocument(id) {\r\n    try {\r\n      const response = await api.downloadFile(`/documents/download/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error(`Failed to download document: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async searchDocuments(query) {\r\n    return api.get('/documents/search', { q: query });\r\n  }\r\n\r\n  async getDocumentsByFolder(folderId) {\r\n    return api.get('/documents', { folderId });\r\n  }\r\n\r\n  // Utility methods for file handling\r\n  formatFileSize(bytes) {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  }\r\n\r\n  getFileIcon(fileType) {\r\n    const iconMap = {\r\n      'application/pdf': 'üìÑ',\r\n      'application/msword': 'üìù',\r\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'üìù',\r\n      'application/vnd.ms-excel': 'üìä',\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'üìä',\r\n      'image/jpeg': 'üñºÔ∏è',\r\n      'image/jpg': 'üñºÔ∏è',\r\n      'image/png': 'üñºÔ∏è',\r\n      'image/gif': 'üñºÔ∏è',\r\n      'text/plain': 'üìÑ',\r\n      'application/zip': 'üóÇÔ∏è',\r\n      'application/rar': 'üóÇÔ∏è',\r\n    };\r\n    \r\n    return iconMap[fileType] || 'üìÑ';\r\n  }\r\n\r\n  isImageFile(fileType) {\r\n    return fileType?.startsWith('image/');\r\n  }\r\n\r\n  isPdfFile(fileType) {\r\n    return fileType === 'application/pdf';\r\n  }\r\n}\r\n\r\nexport default new DocumentService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}