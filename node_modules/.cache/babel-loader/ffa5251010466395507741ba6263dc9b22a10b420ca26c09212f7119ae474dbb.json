{"ast":null,"code":"var _jsxFileName = \"E:\\\\DOCUMENT SHARING\\\\827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d\\\\reactapp\\\\src\\\\components\\\\pages\\\\MyDrive.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { documentService } from '../../services/documentService';\nimport { folderService } from '../../services/folderService';\nimport FolderCard from '../common/FolderCard';\nimport FileCard from '../common/FileCard';\nimport CreateFolderModal from '../common/CreateFolderModal';\nimport UploadFileModal from '../common/UploadFileModal';\nimport ShareModal from '../common/ShareModal';\nimport '../../styles/components/MyDrive.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyDrive = () => {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [currentFolder, setCurrentFolder] = useState(null);\n  const [breadcrumb, setBreadcrumb] = useState([{\n    name: 'My Drive',\n    id: null\n  }]);\n  const [loading, setLoading] = useState(true);\n\n  // Modal states\n  const [showCreateFolder, setShowCreateFolder] = useState(false);\n  const [showUploadFile, setShowUploadFile] = useState(false);\n  const [showShareModal, setShowShareModal] = useState(false);\n  const [shareItem, setShareItem] = useState(null);\n  const [shareItemType, setShareItemType] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    fetchFolderContents();\n  }, [currentFolder]);\n  const fetchFolderContents = async () => {\n    setLoading(true);\n    try {\n      if (currentFolder) {\n        const [subFolders, folderDocs] = await Promise.all([folderService.getSubFolders(currentFolder.id), documentService.getDocumentsByFolder(currentFolder.id)]);\n        setFolders(subFolders);\n        setDocuments(folderDocs);\n      } else {\n        const [rootFolders, rootDocs] = await Promise.all([folderService.getRootFolders(), documentService.getMyDocuments()]);\n        setFolders(rootFolders);\n        // Filter documents that don't belong to any folder\n        setDocuments(rootDocs.filter(doc => !doc.folderId));\n      }\n    } catch (error) {\n      console.error('Error fetching folder contents:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFolderOpen = folder => {\n    setCurrentFolder(folder);\n    setBreadcrumb(prev => [...prev, {\n      name: folder.name,\n      id: folder.id\n    }]);\n  };\n  const handleBreadcrumbClick = index => {\n    const newBreadcrumb = breadcrumb.slice(0, index + 1);\n    setBreadcrumb(newBreadcrumb);\n    if (index === 0) {\n      setCurrentFolder(null);\n    } else {\n      const folder = {\n        id: newBreadcrumb[index].id,\n        name: newBreadcrumb[index].name\n      };\n      setCurrentFolder(folder);\n    }\n  };\n  const handleCreateFolder = async folderData => {\n    try {\n      await folderService.createFolder(folderData);\n      fetchFolderContents();\n    } catch (error) {\n      console.error('Error creating folder:', error);\n    }\n  };\n  const handleUploadFile = async documentData => {\n    try {\n      await documentService.createDocument(documentData);\n      fetchFolderContents();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const handleShare = (item, type) => {\n    setShareItem(item);\n    setShareItemType(type);\n    setShowShareModal(true);\n  };\n  const handleShareSubmit = async (item, shareWith) => {\n    // Implement sharing logic with backend\n    console.log('Sharing', item, 'with', shareWith);\n    // This would typically involve creating a sharing relationship in the backend\n  };\n  const handleDeleteFolder = async folderId => {\n    if (window.confirm('Are you sure you want to delete this folder?')) {\n      try {\n        await folderService.deleteFolder(folderId);\n        fetchFolderContents();\n      } catch (error) {\n        console.error('Error deleting folder:', error);\n      }\n    }\n  };\n  const handleDeleteDocument = async documentId => {\n    if (window.confirm('Are you sure you want to delete this document?')) {\n      try {\n        await documentService.deleteDocument(documentId);\n        fetchFolderContents();\n      } catch (error) {\n        console.error('Error deleting document:', error);\n      }\n    }\n  };\n  const handleViewDocument = document => {\n    console.log('Viewing document:', document);\n    // Implement document viewing logic\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-drive\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drive-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"breadcrumb\",\n        children: breadcrumb.map((crumb, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"breadcrumb-item\",\n            onClick: () => handleBreadcrumbClick(index),\n            children: crumb.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), index < breadcrumb.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-separator\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 49\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drive-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button primary\",\n          onClick: () => setShowCreateFolder(true),\n          children: \"New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button primary\",\n          onClick: () => setShowUploadFile(true),\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drive-content\",\n      children: folders.length === 0 && documents.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"64\",\n          height: \"64\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          className: \"empty-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M10 4H4c-1.11 0-2 .89-2 2v12c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2h-8l-2-2z\",\n            fill: \"#e0e0e0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"This folder is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create a new folder or upload files to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [folders.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: \"Folders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"items-grid\",\n            children: folders.map(folder => /*#__PURE__*/_jsxDEV(FolderCard, {\n              folder: folder,\n              onOpen: handleFolderOpen,\n              onShare: () => handleShare(folder, 'Folder'),\n              onDelete: handleDeleteFolder\n            }, folder.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), documents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: \"Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"items-grid\",\n            children: documents.map(doc => /*#__PURE__*/_jsxDEV(FileCard, {\n              document: doc,\n              onView: handleViewDocument,\n              onShare: () => handleShare(doc, 'Document'),\n              onDelete: handleDeleteDocument\n            }, doc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n      isOpen: showCreateFolder,\n      onClose: () => setShowCreateFolder(false),\n      onSubmit: handleCreateFolder,\n      parentFolder: currentFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadFileModal, {\n      isOpen: showUploadFile,\n      onClose: () => setShowUploadFile(false),\n      onSubmit: handleUploadFile,\n      currentFolder: currentFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShareModal, {\n      isOpen: showShareModal,\n      onClose: () => setShowShareModal(false),\n      item: shareItem,\n      itemType: shareItemType,\n      onShare: handleShareSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(MyDrive, \"qSJ8tsG5drJ7XIHsBBTM5cUJMWc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = MyDrive;\nexport default MyDrive;\nvar _c;\n$RefreshReg$(_c, \"MyDrive\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","documentService","folderService","FolderCard","FileCard","CreateFolderModal","UploadFileModal","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","MyDrive","_s","folders","setFolders","documents","setDocuments","currentFolder","setCurrentFolder","breadcrumb","setBreadcrumb","name","id","loading","setLoading","showCreateFolder","setShowCreateFolder","showUploadFile","setShowUploadFile","showShareModal","setShowShareModal","shareItem","setShareItem","shareItemType","setShareItemType","navigate","location","fetchFolderContents","subFolders","folderDocs","Promise","all","getSubFolders","getDocumentsByFolder","rootFolders","rootDocs","getRootFolders","getMyDocuments","filter","doc","folderId","error","console","handleFolderOpen","folder","prev","handleBreadcrumbClick","index","newBreadcrumb","slice","handleCreateFolder","folderData","createFolder","handleUploadFile","documentData","createDocument","handleShare","item","type","handleShareSubmit","shareWith","log","handleDeleteFolder","window","confirm","deleteFolder","handleDeleteDocument","documentId","deleteDocument","handleViewDocument","document","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","crumb","onClick","length","width","height","viewBox","fill","d","onOpen","onShare","onDelete","onView","isOpen","onClose","onSubmit","parentFolder","itemType","_c","$RefreshReg$"],"sources":["E:/DOCUMENT SHARING/827a159d-8cb5-4b0c-a3ae-c6126cce5724-e95b3f4a-3bfb-45da-a11b-d02a0840f98d/reactapp/src/components/pages/MyDrive.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { documentService } from '../../services/documentService';\r\nimport { folderService } from '../../services/folderService';\r\nimport FolderCard from '../common/FolderCard';\r\nimport FileCard from '../common/FileCard';\r\nimport CreateFolderModal from '../common/CreateFolderModal';\r\nimport UploadFileModal from '../common/UploadFileModal';\r\nimport ShareModal from '../common/ShareModal';\r\nimport '../../styles/components/MyDrive.css';\r\n\r\nconst MyDrive = () => {\r\n  const [folders, setFolders] = useState([]);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [currentFolder, setCurrentFolder] = useState(null);\r\n  const [breadcrumb, setBreadcrumb] = useState([{ name: 'My Drive', id: null }]);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Modal states\r\n  const [showCreateFolder, setShowCreateFolder] = useState(false);\r\n  const [showUploadFile, setShowUploadFile] = useState(false);\r\n  const [showShareModal, setShowShareModal] = useState(false);\r\n  const [shareItem, setShareItem] = useState(null);\r\n  const [shareItemType, setShareItemType] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    fetchFolderContents();\r\n  }, [currentFolder]);\r\n\r\n  const fetchFolderContents = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (currentFolder) {\r\n        const [subFolders, folderDocs] = await Promise.all([\r\n          folderService.getSubFolders(currentFolder.id),\r\n          documentService.getDocumentsByFolder(currentFolder.id)\r\n        ]);\r\n        setFolders(subFolders);\r\n        setDocuments(folderDocs);\r\n      } else {\r\n        const [rootFolders, rootDocs] = await Promise.all([\r\n          folderService.getRootFolders(),\r\n          documentService.getMyDocuments()\r\n        ]);\r\n        setFolders(rootFolders);\r\n        // Filter documents that don't belong to any folder\r\n        setDocuments(rootDocs.filter(doc => !doc.folderId));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching folder contents:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFolderOpen = (folder) => {\r\n    setCurrentFolder(folder);\r\n    setBreadcrumb(prev => [...prev, { name: folder.name, id: folder.id }]);\r\n  };\r\n\r\n  const handleBreadcrumbClick = (index) => {\r\n    const newBreadcrumb = breadcrumb.slice(0, index + 1);\r\n    setBreadcrumb(newBreadcrumb);\r\n    \r\n    if (index === 0) {\r\n      setCurrentFolder(null);\r\n    } else {\r\n      const folder = { id: newBreadcrumb[index].id, name: newBreadcrumb[index].name };\r\n      setCurrentFolder(folder);\r\n    }\r\n  };\r\n\r\n  const handleCreateFolder = async (folderData) => {\r\n    try {\r\n      await folderService.createFolder(folderData);\r\n      fetchFolderContents();\r\n    } catch (error) {\r\n      console.error('Error creating folder:', error);\r\n    }\r\n  };\r\n\r\n  const handleUploadFile = async (documentData) => {\r\n    try {\r\n      await documentService.createDocument(documentData);\r\n      fetchFolderContents();\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n    }\r\n  };\r\n\r\n  const handleShare = (item, type) => {\r\n    setShareItem(item);\r\n    setShareItemType(type);\r\n    setShowShareModal(true);\r\n  };\r\n\r\n  const handleShareSubmit = async (item, shareWith) => {\r\n    // Implement sharing logic with backend\r\n    console.log('Sharing', item, 'with', shareWith);\r\n    // This would typically involve creating a sharing relationship in the backend\r\n  };\r\n\r\n  const handleDeleteFolder = async (folderId) => {\r\n    if (window.confirm('Are you sure you want to delete this folder?')) {\r\n      try {\r\n        await folderService.deleteFolder(folderId);\r\n        fetchFolderContents();\r\n      } catch (error) {\r\n        console.error('Error deleting folder:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteDocument = async (documentId) => {\r\n    if (window.confirm('Are you sure you want to delete this document?')) {\r\n      try {\r\n        await documentService.deleteDocument(documentId);\r\n        fetchFolderContents();\r\n      } catch (error) {\r\n        console.error('Error deleting document:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleViewDocument = (document) => {\r\n    console.log('Viewing document:', document);\r\n    // Implement document viewing logic\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-drive\">\r\n      <div className=\"drive-header\">\r\n        <div className=\"breadcrumb\">\r\n          {breadcrumb.map((crumb, index) => (\r\n            <React.Fragment key={index}>\r\n              <button\r\n                className=\"breadcrumb-item\"\r\n                onClick={() => handleBreadcrumbClick(index)}\r\n              >\r\n                {crumb.name}\r\n              </button>\r\n              {index < breadcrumb.length - 1 && <span className=\"breadcrumb-separator\">/</span>}\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n        <div className=\"drive-actions\">\r\n          <button\r\n            className=\"action-button primary\"\r\n            onClick={() => setShowCreateFolder(true)}\r\n          >\r\n            New Folder\r\n          </button>\r\n          <button\r\n            className=\"action-button primary\"\r\n            onClick={() => setShowUploadFile(true)}\r\n          >\r\n            Upload File\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"drive-content\">\r\n        {folders.length === 0 && documents.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" className=\"empty-icon\">\r\n              <path d=\"M10 4H4c-1.11 0-2 .89-2 2v12c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2h-8l-2-2z\" fill=\"#e0e0e0\"/>\r\n            </svg>\r\n            <h3>This folder is empty</h3>\r\n            <p>Create a new folder or upload files to get started</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {folders.length > 0 && (\r\n              <div className=\"content-section\">\r\n                <h3 className=\"section-title\">Folders</h3>\r\n                <div className=\"items-grid\">\r\n                  {folders.map(folder => (\r\n                    <FolderCard\r\n                      key={folder.id}\r\n                      folder={folder}\r\n                      onOpen={handleFolderOpen}\r\n                      onShare={() => handleShare(folder, 'Folder')}\r\n                      onDelete={handleDeleteFolder}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {documents.length > 0 && (\r\n              <div className=\"content-section\">\r\n                <h3 className=\"section-title\">Documents</h3>\r\n                <div className=\"items-grid\">\r\n                  {documents.map(doc => (\r\n                    <FileCard\r\n                      key={doc.id}\r\n                      document={doc}\r\n                      onView={handleViewDocument}\r\n                      onShare={() => handleShare(doc, 'Document')}\r\n                      onDelete={handleDeleteDocument}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      <CreateFolderModal\r\n        isOpen={showCreateFolder}\r\n        onClose={() => setShowCreateFolder(false)}\r\n        onSubmit={handleCreateFolder}\r\n        parentFolder={currentFolder}\r\n      />\r\n\r\n      <UploadFileModal\r\n        isOpen={showUploadFile}\r\n        onClose={() => setShowUploadFile(false)}\r\n        onSubmit={handleUploadFile}\r\n        currentFolder={currentFolder}\r\n      />\r\n\r\n      <ShareModal\r\n        isOpen={showShareModal}\r\n        onClose={() => setShowShareModal(false)}\r\n        item={shareItem}\r\n        itemType={shareItemType}\r\n        onShare={handleShareSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDrive;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}